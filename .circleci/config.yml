version: 2.1

# ---------------------------------------------------------------------------- #
#                                   Workflows                                  #
# ---------------------------------------------------------------------------- #

workflows:
  Run tests:
    when:
      equal: [ test, << pipeline.parameters.pipeline_action >> ]
    jobs:
      - Install dependencies
      - Build:
          requires:
            - Install dependencies
      - Run Playwright tests:
          name: Run pos-web tests
          project: pos-web
          requires:
            - Build
      - Trigger pipeline:
          name: Trigger the publish report workflow
          pipeline_action: report
          requires:
            - Run pos-web tests

  Publish reports:
    when:
      equal: [ report, << pipeline.parameters.pipeline_action >> ]
    jobs:
      - workflow-queue/pipeline-queue:
          context: $WORKFLOW_QUEUE_TOKEN
          name: pipeline-queue
      - Publish Playwright reports:
          name: Publish pos-web report
          project: pos-web

# ---------------------------------------------------------------------------- #
#                                    Aliases                                   #
# ---------------------------------------------------------------------------- #

aliases:
  - &param_pipeline_action
    pipeline_action:
      type: enum
      enum: [test, report]
      default: test

  - &restore_pnpm_cache
    restore_cache:
      name: Restore pnpm cache
      keys:
        - pnpm-{{ checksum "pnpm-lock.yaml" }}
        - pnpm-

  - &install_dependencies
    run:
      name: Install dependencies using pnpm
      command: |
        corepack enable
        pnpm config set store-dir ~/.pnpm-store
        pnpm install --ignore-scripts

  - &build
    run:
      name: Build monorepo packages
      environment:
        TURBO_UI: 'false'
      command: pnpm build

# ---------------------------------------------------------------------------- #
#                                  Parameters                                  #
# ---------------------------------------------------------------------------- #

parameters:
  *param_pipeline_action

# ---------------------------------------------------------------------------- #
#                                     Jobs                                     #
# ---------------------------------------------------------------------------- #

jobs:
  # ------------------------------- Utility jobs ------------------------------- #

  Trigger pipeline:
    docker:
      - image: cimg/base:current
    resource_class: small
    parameters:
      *param_pipeline_action
    steps:
      - run:
          name: Trigger pipeline using CircleCI API
          command: |
            curl -X POST \
            https://circleci.com/api/v2/project/$PROJECT_SLUG/pipeline \
            -H "Accept: application/json" \
            -H "Content-Type: application/json" \
            -H "Circle-Token: $WORKFLOW_QUEUE_TOKEN" \
            -d '{"parameters": {"pipeline_action": "<< parameters.pipeline_action >>"}}'

  # ---------------------------------- CI jobs --------------------------------- #

  Install dependencies:
    docker:
      - image: cimg/node:lts
    resource_class: small
    steps:
      - checkout
      - *restore_pnpm_cache
      - *install_dependencies
      - save_cache:
          name: Save pnpm cache
          key: pnpm-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - ~/.pnpm-store

  Build:
    docker:
      - image: cimg/node:lts
    resource_class: small
    steps:
      - checkout
      - *restore_pnpm_cache
      - *install_dependencies
      - *build

  Run Playwright tests:
    docker:
      - image: cimg/openjdk:23.0-node
    resource_class: small
    parallelism: 3
    parameters:
      project:
        type: string
    steps:
      - checkout
      - *restore_pnpm_cache
      # this Convenience Image requires a sudo permission to use Corepack
      # that's why we duplicate the dependencies installing steps with the sudo access here
      - run:
          name: Install dependencies using pnpm
          command: |
            sudo npm install -g corepack@latest
            sudo corepack enable
            pnpm config set store-dir ~/.pnpm-store
            pnpm install --ignore-scripts
      - *build
      - run:
          name: Install Playwright browsers
          command: pnpm playwright:install-browsers
      - run:
          name: 'Run tests for project: << parameters.project >>'
          command: |
            cd e2e/<< parameters.project >>
            pnpm test --shard=$((${CIRCLE_NODE_INDEX}+1))/${CIRCLE_NODE_TOTAL}
      - store_test_results:
          path: e2e/<< parameters.project >>/playwright-report/results.xml

  Publish Playwright reports:
    docker:
      - image: cimg/base:current
    resource_class: small
    parameters:
      project:
        type: string
    steps:
      - run:
          name: Verify job
          command: echo "<< parameters.project >>"
